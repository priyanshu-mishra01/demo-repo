LoginDAO

import java.sql.*;
import java.time.LocalDateTime;
import java.util.Random;

public class LoginDAO {
    private Connection conn;

    public LoginDAO() {
        conn = DatabaseConnection.getConnection();
    }

    // Generate Random Customer ID
    public int generateCustomerId() {
        return new Random().nextInt(9000) + 1000; // 4-digit random ID
    }

    // Register New User
    public void registerUser(String password) {
        int customerId = generateCustomerId();
        String query = "INSERT INTO Login (customer_id, last_login, last_logout, updated_password, old_password, is_now_logged_in) VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, customerId);
            pstmt.setTimestamp(2, Timestamp.valueOf(LocalDateTime.now()));
            pstmt.setTimestamp(3, Timestamp.valueOf(LocalDateTime.now()));
            pstmt.setString(4, password);
            pstmt.setString(5, password);
            pstmt.setString(6, "N");
            pstmt.executeUpdate();
            System.out.println("User Registered Successfully! Your Customer ID: " + customerId);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Login User
    public boolean loginUser(int customerId, String password) {
        String query = "SELECT * FROM Login WHERE customer_id=? AND updated_password=?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, customerId);
            pstmt.setString(2, password);
            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {
                updateLoginStatus(customerId, "Y");
                System.out.println("Login Successful! Redirecting to Home Page...");
                return true;
            } else {
                validateLoginErrors(customerId, password);
                return false;
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    // Update Login Status
    public void updateLoginStatus(int customerId, String status) {
        String query = "UPDATE Login SET is_now_logged_in=?, last_login=? WHERE customer_id=?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setString(1, status);
            pstmt.setTimestamp(2, Timestamp.valueOf(LocalDateTime.now()));
            pstmt.setInt(3, customerId);
            pstmt.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Validate Login Errors
    private void validateLoginErrors(int customerId, String password) throws SQLException {
        String query = "SELECT customer_id FROM Login WHERE customer_id=?";
        try (PreparedStatement pstmt = conn.prepareStatement(query)) {
            pstmt.setInt(1, customerId);
            ResultSet rs = pstmt.executeQuery();
            if (!rs.next()) {
                System.out.println("ID not valid.");
            } else {
                System.out.println("Password not valid.");
            }
        }
    }

    // Logout User
    public void logoutUser(int customerId) {
        updateLoginStatus(customerId, "N");
        System.out.println("User Logged Out Successfully.");
    }

    // Fetch First 50% Logged In Users
    public void getFirst50PercentLoggedInUsers() {
        String query = "SELECT customer_id FROM Login WHERE is_now_logged_in='Y' LIMIT (SELECT COUNT(*)/2 FROM Login)";
        try (Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(query)) {
            System.out.println("First 50% Logged In Customers:");
            while (rs.next()) {
                System.out.println("Customer ID: " + rs.getInt("customer_id"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
